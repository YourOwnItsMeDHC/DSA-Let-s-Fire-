//https://youtu.be/Ppy9lvyMnuc
//Same as : 6. 410. Split Array Largest Sum👍👍(Same as- BS-Hard-3 then 4,5)

import java.util.*;   
import java.util.ArrayList;
public class Solution {
	public static int getMaximumSweetness(ArrayList<Integer> nums, int k) {
        
        int start = 1;
        
        int sum = 0;
        for(int i=0; i<nums.size(); i++) {
            sum += nums.get(i);
        }
        int end = sum / (k+1);
        
        int ans = -1;
        
        while(start <= end) {
            int mid = start + (end-start)/2;
            if(canSplit(nums, k, mid)) {
                ans = mid;
                start = mid+1;
            }
            else {
                end = mid-1;
            }
        }
        return ans;
    }
    
    
    
    
    static boolean canSplit(ArrayList<Integer> nums, int k, int mid) {
        int chunksCount = 0;            //chunks or pieces or cuts , etc
        int sum = 0;                     //"sum" or sweetnessSum
        
        for(int i=0; i<nums.size(); i++) {
            sum += nums.get(i);
            if(sum >= mid) {
                chunksCount++;
                sum = 0;
            }
        }
        return chunksCount >= k+1;
    }
    
}