class Solution {
    public int largestAltitude(int[] gain) {
        int altitude = 0;
        int max = 0;
        for(int i=0; i<gain.length; i++) {
            altitude += gain[i];
              max = Math.max(altitude, max);
        }
        return max;
    }
}

/*
//Approach 1 :

class Solution {
    public int largestAltitude(int[] gain) {
        int[] altitude = new int[gain.length + 1];
           altitude[0] = 0;                         //Initially
        for(int i=0; i<gain.length; i++) {
            altitude[i+1] = gain[i] + altitude[i];
        }
        int max = altitude[0];
        for(int i=1; i<altitude.length; i++) {
            if(altitude[i] > max) {
                max = altitude[i];
            }
        }
        return max;
    }
}
*/

/*
//Approach 2 (Using Method) :

class Solution {
    public int largestAltitude(int[] gain) {
        int[] altitude = new int[gain.length + 1];
           altitude[0] = 0;                         //Initially
        for(int i=0; i<gain.length; i++) {
            altitude[i+1] = gain[i] + altitude[i];
        }
            return highAlti(altitude);
    }
    public int highAlti(int[] arr) {
        int max = arr[0];
        for(int i=1; i<arr.length; i++) {
            if(arr[i] > max) {
                max = arr[i];
            }
        }
        return max;
    }
}
*/


