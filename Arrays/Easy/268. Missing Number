// //Using Hashing/Array Method :
// class Solution {
//     public int missingNumber(int[] nums) {
       
//         int[] ans = new int[nums.length+1];
        
//     int j=0;
//       while(j<=nums.length) {
//         for(int i=0; i<nums.length; i++) {
//             if(nums[i] == j) {
//                 ans[j] = 1;
//             }
//          }
//           j++;
//       }
        
//         int val = -1;
//         for(int i=0; i<ans.length; i++) {
//             if(ans[i] == 0) {
//                 val =  i;
//             }
//         }
//         return val;
//     }
// }





// //Sum Method :
// class Solution {
//     public int missingNumber(int[] nums) {
        
//         int sumOfLength = nums.length * (nums.length+1) / 2;
//         int sum=nums[0];
//         for(int i=1; i<nums.length; i++) {
//             sum += nums[i];
//         }
        
//         return sumOfLength-sum;
//     }
// }





//XOR Method :
class Solution {
    public int missingNumber(int[] nums) {
        
        int xorOfN = 0;
        for(int i=1; i<=nums.length; i++) {
            xorOfN ^= i;
        }
        
        int xorOfnums=nums[0];
        for(int i=1; i<nums.length; i++) {
            xorOfnums ^= nums[i];
        }
        
        return xorOfN^xorOfnums; 
        
    }
}
